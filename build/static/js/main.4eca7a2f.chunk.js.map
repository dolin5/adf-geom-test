{"version":3,"sources":["../node_modules/@stencil/core/internal/client lazy /^/.*$/ include: /.entry/.js$/ exclude: /.system/.entry/.js$/ groupOptions: {} namespace object","ArcGISMap.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ArcGISMap","mapDiv","useRef","useEffect","current","map","Map","basemap","MapView","container","zoom","center","FeatureLayer","url","queryFeatures","where","outFields","returnGeometry","r","projectArrays","graphics","features","f","Graphic","attributes","geometry","centroid","forEach","g","push","zoomedOutPoints","Object","entries","index","point","x","reduce","sum","length","y","spatialReference","Point","pointRenderer","type","symbol","size","outline","style","width","color","zoomedOutLayer","source","objectIdField","renderer","maxScale","middleLayer","minScale","polygonLayer","addMany","className","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4eca7a2f.chunk.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 387;","import React, { useEffect, useRef } from 'react'\nimport MapView from '@arcgis/core/views/MapView'\nimport Map from '@arcgis/core/Map';\nimport FeatureLayer from '@arcgis/core/layers/FeatureLayer';\nimport Polygon from '@arcgis/core/geometry/Polygon';\nimport Point from '@arcgis/core/geometry/Point';\nimport Graphic from '@arcgis/core/Graphic';\nimport SimpleMarkerSymbol from '@arcgis/core/symbols/SimpleMarkerSymbol';\nimport SimpleRenderer from '@arcgis/core/renderers/SimpleRenderer';\n\nconst ArcGISMap = ()=>{\n    \n  const mapDiv = useRef(null);\n\n  useEffect(() => {\n    if (mapDiv.current) {\n      /**\n       * Initialize application\n       */\n      const map = new Map({\n        basemap: \"streets-vector\"\n\n      });\n\n      const view = new MapView({\n        container: mapDiv.current!,\n        map,\n        zoom:3,\n        center:[-100,39]\n      });\n\n      const polygonLayer = new FeatureLayer({\n        url:\"https://gis-test.arborday.org/server/rest/services/CP_Showcase_MVP_Data_Polygon/FeatureServer/0\"\n      });\n\n      polygonLayer.queryFeatures({where:\"1=1\", outFields:['*'], returnGeometry:true }).then(r=>{\n        const extents = []\n        const projectArrays: {[key: string]: Graphic[]} = {};\n        const graphics = r.features.map(f=>{\n          return new Graphic({attributes:f.attributes,geometry:(f.geometry as Polygon).centroid})\n        })\n        graphics.forEach(g=>{\n          projectArrays[g.attributes['PlantingProjectID']] = projectArrays[g.attributes['PlantingProjectID']] || [];\n          projectArrays[g.attributes['PlantingProjectID']].push(g);\n        })\n\n        const zoomedOutPoints:Graphic[] = [];\n\n        Object.entries(projectArrays).forEach(([id,graphics],index)=>{\n          const point = new Graphic({attributes:{'PlantingProjectID':id,'OBJECTID': index}})\n          const x = graphics.reduce((sum,g)=>sum+(g.geometry as Point).x,0)/graphics.length;\n          const y = graphics.reduce((sum,g)=>sum+(g.geometry as Point).y,0)/graphics.length;\n          const spatialReference = graphics[0].geometry.spatialReference;\n          point.geometry = new Point({spatialReference,x,y});\n          zoomedOutPoints.push(point)\n        })\n\n        const pointRenderer = {\n          type:'simple',\n          symbol:{\n            type:'simple-marker',\n            size:8,              \n            outline: { style: \"none\", width: 0 },\n            color: [0, 196, 0, 1]\n          } \n        } as unknown as SimpleRenderer;\n\n        const zoomedOutLayer = new FeatureLayer({\n          source:zoomedOutPoints, objectIdField:'OBJECTID',renderer:pointRenderer,\n          maxScale:5000000      \n        });\n\n\n        const middleLayer = new FeatureLayer({\n          source:graphics, objectIdField:'OBJECTID', renderer:pointRenderer,minScale:4999999,maxScale:100000\n        })\n\n        const polyRenderer = {\n          type:'simple',\n          symbol:{\n          type:'simple-fill',\n          outline: {           color: [0, 196, 0, 1] },\n          color: [0, 196, 0, .25]}\n        } as unknown as SimpleRenderer\n        const polygonLayer = new FeatureLayer({source:r.features,objectIdField:'OBJECTID',renderer:polyRenderer, minScale:99999})\n\n        map.addMany([zoomedOutLayer,middleLayer,polygonLayer]);\n      })\n\n\n\n      // const drawnLayer = new FeatureLayer({\n      //   feat\n      // })\n\n      // map.add(polygonLayer);\n\n      \n\n\n\n    }\n  }, []);\n\n  return <div className=\"mapDiv\" ref={mapDiv}></div>;\n}\n\nexport default ArcGISMap","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ArcGISMap from './ArcGISMap'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <ArcGISMap></ArcGISMap>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}